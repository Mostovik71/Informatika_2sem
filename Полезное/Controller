

package sample;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.fxml.FXML;
import javafx.scene.chart.LineChart;
import javafx.scene.chart.XYChart;

import java.io.*;
import java.util.ArrayList;
import java.util.Collections;

import static java.lang.Math.sqrt;

public class Controller {


    @FXML
    LineChart<Double, Double> lineChart;

    ArrayList<Double> X = new ArrayList<>();
    ArrayList<Double> Y = new ArrayList<>();

    double x, y;
    File file = new File("C:\\Users\\mosto\\Desktop\\temp.csv");

    FileReader fr = new FileReader(file);

    BufferedReader reader = new BufferedReader(fr);

    String line = reader.readLine();

    public Controller() throws IOException {
    }
    public void add() throws IOException {
        while (line != null) {
            x = Double.parseDouble(line.substring(0, 2));
            y = Double.parseDouble(line.substring(11));
            X.add(x);
            Y.add(y);
            line = reader.readLine();
        }

    }
    @FXML
    public void MNK() throws IOException {
        XYChart.Series series = new XYChart.Series();

        double sum_x = 0, sum_y = 0, sum_xx = 0, sum_xy = 0, sum_yy = 0;
        add();

        for (int i = 0; i < X.size(); i++) {
            sum_x += X.get(i);
            sum_y += X.get(i);
            sum_xx += X.get(i) * X.get(i);
            sum_xy += X.get(i) * Y.get(i);
            sum_yy += Y.get(i) * Y.get(i);
        }

        double a, b;
        b = (sum_xy * sum_x - sum_y * sum_xx) / (sum_x * sum_x - X.size() * sum_xx);
        a = (sum_y - X.size() * b) / sum_x;
        System.out.println("a=" + a);
        System.out.println("b=" + b);




        for (int i = 0; i < X.size(); i++) {
            double y = a *X.get(i) +b;

            series.getData().add(new XYChart.Data<>(X.get(i), y));
        }

        series.setName("Прямая");
        lineChart.getData().add(series);

    }

    @FXML
    public void sqr() throws IOException {
        XYChart.Series series = new XYChart.Series();
        double sum_y = 0;
        double sum_xy = 0;
        double sum_x2y = 0;
        double sum_x = 0;
        double sum_x_2 = 0;
        double sum_x_3 = 0;
        double sum_x_4 = 0;

        add();
        for (int i = 0; i < Y.size(); i++) {
            sum_y += Y.get(i);
            sum_xy += Y.get(i) * i;
            sum_x2y += Y.get(i) * i * i;
            sum_x += i;
            sum_x_2 += i * i;
            sum_x_3 += i * i * i;
            sum_x_4 += i * i * i * i;
        }
        double det = Y.size() * sum_x_2 * sum_x_4 + sum_x_3 * sum_x * sum_x_2 + sum_x_3 * sum_x * sum_x_2
                - sum_x_2 * sum_x_2 * sum_x_2 - sum_x_3 * sum_x_3 * Y.size() - sum_x_4 * sum_x * sum_x;
        double det1 = Y.size() * sum_x_2 * sum_x2y + sum_y * sum_x * sum_x_3 + sum_xy * sum_x * sum_x_2
                - sum_y * sum_x_2 * sum_x_2 - sum_x_3 * Y.size() * sum_xy - sum_x2y * sum_x * sum_x;
        double det2 = Y.size() * sum_xy * sum_x_4 + sum_x2y * sum_x * sum_x_2 + sum_x_3 * sum_y * sum_x_2
                - sum_x_2 * sum_x_2 * sum_xy - sum_x_3 * sum_x2y * Y.size() - sum_x_4 * sum_y * sum_x;
        double det3 = sum_y * sum_x_2 * sum_x_4 + sum_x_3 * sum_xy * sum_x_2 + sum_x_3 * sum_x * sum_x2y
                - sum_x_2 * sum_x_2 * sum_x2y - sum_x_3 * sum_x_3 * sum_y - sum_x_4 * sum_x * sum_xy;
        double a = det1 / det;
        double b = det2 / det;
        double c = det3 / det;
        System.out.println("a=" + a);
        System.out.println("b=" + b);
        System.out.println("c=" + c);
        for (int i = 0; i < X.size(); i++) {
            double y = a *X.get(i) *X.get(i) + b * X.get(i) + c;

            series.getData().add(new XYChart.Data<>(X.get(i), y));
        }
        series.setName("Парабола");
        lineChart.getData().add(series);

    }

    @FXML
    public void exp() throws IOException {
        XYChart.Series series = new XYChart.Series();
        double sum_lny = 0;
      double  sum_lny_x=0;
        double sum_x2 = 0;
        double sum_x = 0;

add();
for (int i = 1; i < Y.size(); i++) {
                sum_lny += Math.log(Y.get(i));
                sum_x2 += X.get(i) * X.get(i);
                sum_x += X.get(i);
    sum_lny_x += Math.log(Y.get(i)) * i;
            }

            double b = (sum_lny * sum_x2 - sum_lny_x*sum_x) / (Y.size() * sum_x2- sum_x*sum_x);
        double a = (Y.size() * sum_lny_x - sum_lny * sum_x) / (Y.size() * sum_x2- sum_x*sum_x);
        System.out.println("a=" + a);
        System.out.println("b=" + b);

        for (int i = 0; i < X.size(); i++) {
double y = Math.exp(a) * Math.exp(b*x);
            series.getData().add(new XYChart.Data<>(X.get(i), y));
        }
        series.setName("Экспонента");
        lineChart.getData().add(series);


    }


    @FXML
    public void hyp() throws IOException {
        XYChart.Series series = new XYChart.Series();
        double sum_y_x = 0;
        double sum_1_x = 0;
        double sum_y = 0;
        double sum_1_x2 = 0;
        add();
            for (int i = 0; i < Y.size(); i++) {
                if (i != 0) {
                    sum_1_x += 1 / (i);
                    sum_1_x2 += 1 / ((i) * (i));
                    sum_y_x += Y.get(i) / (i);
                }
                sum_y += Y.get(i);
            }
            double b = (Y.size() * sum_y_x - sum_1_x * sum_y) / (Y.size() * sum_1_x2 - sum_1_x * sum_1_x);
        double a = sum_y / Y.size() - b * sum_1_x / Y.size();
        System.out.println("a=" + a);
        System.out.println("b=" + b);
        for (int i = 0; i < X.size(); i++) {
            double y = a+b/x;
            series.getData().add(new XYChart.Data<>(X.get(i), y));
        }
        series.setName("Гипербола");
        lineChart.getData().add(series);
    }

    public void clear(){
        XYChart.Series series = new XYChart.Series();
        series.getData().removeAll(Collections.singleton(lineChart.getData().setAll()));

    }
}
